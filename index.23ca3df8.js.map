{"mappings":"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","sources":["node_modules/custom-event-polyfill/custom-event-polyfill.js","node_modules/custom-select/src/index.js","src/scripts/menu.js","src/script.js","src/scripts/range.js"],"sourcesContent":["// Polyfill for creating CustomEvents on IE9/10/11\n\n// code pulled from:\n// https://github.com/d4tocchini/customevent-polyfill\n// https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent#Polyfill\n\ntry {\n    var ce = new window.CustomEvent('test');\n    ce.preventDefault();\n    if (ce.defaultPrevented !== true) {\n        // IE has problems with .preventDefault() on custom events\n        // http://stackoverflow.com/questions/23349191\n        throw new Error('Could not prevent default');\n    }\n} catch(e) {\n  var CustomEvent = function(event, params) {\n    var evt, origPrevent;\n    params = params || {\n      bubbles: false,\n      cancelable: false,\n      detail: undefined\n    };\n\n    evt = document.createEvent(\"CustomEvent\");\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n    origPrevent = evt.preventDefault;\n    evt.preventDefault = function () {\n      origPrevent.call(this);\n      try {\n        Object.defineProperty(this, 'defaultPrevented', {\n          get: function () {\n            return true;\n          }\n        });\n      } catch(e) {\n        this.defaultPrevented = true;\n      }\n    };\n    return evt;\n  };\n\n  CustomEvent.prototype = window.Event.prototype;\n  window.CustomEvent = CustomEvent; // expose definition to window\n}\n","/**\n * custom-select\n * A lightweight JS script for custom select creation.\n * Needs no dependencies.\n *\n * v0.0.1\n * (https://github.com/custom-select/custom-select)\n *\n * Copyright (c) 2016 Gionatan Lombardi & Marco Nucara\n * MIT License\n */\n\nimport 'custom-event-polyfill';\n\nconst defaultParams = {\n  containerClass: 'custom-select-container',\n  openerClass: 'custom-select-opener',\n  panelClass: 'custom-select-panel',\n  optionClass: 'custom-select-option',\n  optgroupClass: 'custom-select-optgroup',\n  isSelectedClass: 'is-selected',\n  hasFocusClass: 'has-focus',\n  isDisabledClass: 'is-disabled',\n  isOpenClass: 'is-open',\n};\n\nfunction builder(el, builderParams) {\n  const containerClass = 'customSelect';\n  let isOpen = false;\n  let uId = '';\n  const select = el;\n  let container;\n  let opener;\n  let focusedElement;\n  let selectedElement;\n  let panel;\n  let currLabel;\n\n  let resetSearchTimeout;\n  let searchKey = '';\n\n  //\n  // Inner Functions\n  //\n\n  // Sets the focused element with the neccessary classes substitutions\n  function setFocusedElement(cstOption) {\n    if (focusedElement) {\n      focusedElement.classList.remove(builderParams.hasFocusClass);\n    }\n    if (typeof cstOption !== 'undefined') {\n      focusedElement = cstOption;\n      focusedElement.classList.add(builderParams.hasFocusClass);\n      // Offset update: checks if the focused element is in the visible part of the panelClass\n      // if not dispatches a custom event\n      if (isOpen) {\n        if (cstOption.offsetTop < cstOption.offsetParent.scrollTop\n          || cstOption.offsetTop >\n            (cstOption.offsetParent.scrollTop + cstOption.offsetParent.clientHeight)\n            - cstOption.clientHeight) {\n          cstOption.dispatchEvent(new CustomEvent('custom-select:focus-outside-panel', { bubbles: true }));\n        }\n      }\n    } else {\n      focusedElement = undefined;\n    }\n  }\n\n  // Reassigns the focused and selected custom option\n  // Updates the opener text\n  // IMPORTANT: the setSelectedElement function doesn't change the select value!\n  function setSelectedElement(cstOption) {\n    if (selectedElement) {\n      selectedElement.classList.remove(builderParams.isSelectedClass);\n      selectedElement.removeAttribute('id');\n      opener.removeAttribute('aria-activedescendant');\n    }\n    if (typeof cstOption !== 'undefined') {\n      cstOption.classList.add(builderParams.isSelectedClass);\n      cstOption.setAttribute('id', `${containerClass}-${uId}-selectedOption`);\n      opener.setAttribute('aria-activedescendant', `${containerClass}-${uId}-selectedOption`);\n      selectedElement = cstOption;\n      opener.children[0].textContent = selectedElement.customSelectOriginalOption.text;\n    } else {\n      selectedElement = undefined;\n      opener.children[0].textContent = '';\n    }\n    setFocusedElement(cstOption);\n  }\n\n  function setValue(value) {\n    // Gets the option with the provided value\n    let toSelect = select.querySelector(`option[value='${value}']`);\n    // If no option has the provided value get the first\n    if (!toSelect) {\n      [toSelect] = select.options;\n    }\n    // The option with the provided value becomes the selected one\n    // And changes the select current value\n    toSelect.selected = true;\n\n    setSelectedElement(select.options[select.selectedIndex].customSelectCstOption);\n  }\n\n  function moveFocuesedElement(direction) {\n    // Get all the .custom-select-options\n    // Get the index of the current focused one\n    const currentFocusedIndex =\n      [].indexOf.call(select.options, focusedElement.customSelectOriginalOption);\n    // If the next or prev custom option exist\n    // Sets it as the new focused one\n    if (select.options[currentFocusedIndex + direction]) {\n      setFocusedElement(select.options[currentFocusedIndex + direction].customSelectCstOption);\n    }\n  }\n\n  // Open/Close function (toggle)\n  function open(bool) {\n    // Open\n    if (bool || typeof bool === 'undefined') {\n      // If present closes an opened instance of the plugin\n      // Only one at time can be open\n      const openedCustomSelect =\n        document.querySelector(`.${containerClass}.${builderParams.isOpenClass}`);\n      if (openedCustomSelect) {\n        openedCustomSelect.customSelect.open = false;\n      }\n\n      // Opens only the clicked one\n      container.classList.add(builderParams.isOpenClass);\n\n      // aria-expanded update\n      container.classList.add(builderParams.isOpenClass);\n      opener.setAttribute('aria-expanded', 'true');\n\n      // Updates the scrollTop position of the panel in relation with the focused option\n      if (selectedElement) {\n        panel.scrollTop = selectedElement.offsetTop;\n      }\n\n      // Dispatches the custom event open\n      container.dispatchEvent(new CustomEvent('custom-select:open'));\n\n      // Sets the global state\n      isOpen = true;\n\n    // Close\n    } else {\n      // Removes the css classes\n      container.classList.remove(builderParams.isOpenClass);\n\n      // aria-expanded update\n      opener.setAttribute('aria-expanded', 'false');\n\n      // Sets the global state\n      isOpen = false;\n\n      // When closing the panel the focused custom option must be the selected one\n      setFocusedElement(selectedElement);\n\n      // Dispatches the custom event close\n      container.dispatchEvent(new CustomEvent('custom-select:close'));\n    }\n    return isOpen;\n  }\n\n  function clickEvent(e) {\n    // Opener click\n    if (e.target === opener || opener.contains(e.target)) {\n      if (isOpen) {\n        open(false);\n      } else {\n        open();\n      }\n    // Custom Option click\n    } else if (\n      e.target.classList\n      && e.target.classList.contains(builderParams.optionClass)\n      && panel.contains(e.target)) {\n      setSelectedElement(e.target);\n      // Sets the corrisponding select's option to selected updating the select's value too\n      selectedElement.customSelectOriginalOption.selected = true;\n      open(false);\n      // Triggers the native change event of the select\n      select.dispatchEvent(new CustomEvent('change'));\n    // click on label or select (click on label corrispond to select click)\n    } else if (e.target === select) {\n      // if the original select is focusable (for any external reason) let the focus\n      // else trigger the focus on opener\n      if (opener !== document.activeElement && select !== document.activeElement) {\n        opener.focus();\n      }\n    // Click outside the container closes the panel\n    } else if (isOpen && !container.contains(e.target)) {\n      open(false);\n    }\n  }\n\n  function mouseoverEvent(e) {\n    // On mouse move over and options it bacames the focused one\n    if (e.target.classList && e.target.classList.contains(builderParams.optionClass)) {\n      setFocusedElement(e.target);\n    }\n  }\n\n  function keydownEvent(e) {\n    if (!isOpen) {\n      // On \"Arrow down\", \"Arrow up\" and \"Space\" keys opens the panel\n      if (e.keyCode === 40 || e.keyCode === 38 || e.keyCode === 32) {\n        open();\n      }\n    } else {\n      switch (e.keyCode) {\n        case 13:\n        case 32:\n          // On \"Enter\" or \"Space\" selects the focused element as the selected one\n          setSelectedElement(focusedElement);\n          // Sets the corrisponding select's option to selected updating the select's value too\n          selectedElement.customSelectOriginalOption.selected = true;\n          // Triggers the native change event of the select\n          select.dispatchEvent(new CustomEvent('change'));\n          open(false);\n          break;\n        case 27:\n          // On \"Escape\" closes the panel\n          open(false);\n          break;\n\n        case 38:\n          // On \"Arrow up\" set focus to the prev option if present\n          moveFocuesedElement(-1);\n          break;\n        case 40:\n          // On \"Arrow down\" set focus to the next option if present\n          moveFocuesedElement(+1);\n          break;\n        default:\n          // search in panel (autocomplete)\n          if (e.keyCode >= 48 && e.keyCode <= 90) {\n            // clear existing reset timeout\n            if (resetSearchTimeout) {\n              clearTimeout(resetSearchTimeout);\n            }\n\n            // reset timeout for empty search key\n            resetSearchTimeout = setTimeout(() => {\n              searchKey = '';\n            }, 1500);\n\n            // update search keyword appending the current key\n            searchKey += String.fromCharCode(e.keyCode);\n\n            // search the element\n            for (let i = 0, l = select.options.length; i < l; i++) {\n              // removed cause not supported by IE:\n              // if (options[i].text.startsWith(searchKey))\n              if (select.options[i].text.toUpperCase().substr(0, searchKey.length) === searchKey) {\n                setFocusedElement(select.options[i].customSelectCstOption);\n                break;\n              }\n            }\n          }\n          break;\n      }\n    }\n  }\n\n  function changeEvent() {\n    const index = select.selectedIndex;\n    const element = index === -1 ? undefined : select.options[index].customSelectCstOption;\n\n    setSelectedElement(element);\n  }\n\n  // When the option is outside the visible part of the opened panel, updates the scrollTop position\n  // This is the default behaviour\n  // To block it the plugin user must\n  // add a \"custom-select:focus-outside-panel\" eventListener on the panel\n  // with useCapture set to true\n  // and stopPropagation\n  function scrollToFocused(e) {\n    const currPanel = e.currentTarget;\n    const currOption = e.target;\n    // Up\n    if (currOption.offsetTop < currPanel.scrollTop) {\n      currPanel.scrollTop = currOption.offsetTop;\n    // Down\n    } else {\n      currPanel.scrollTop = (currOption.offsetTop + currOption.clientHeight)\n      - currPanel.clientHeight;\n    }\n  }\n\n  function addEvents() {\n    document.addEventListener('click', clickEvent);\n    panel.addEventListener('mouseover', mouseoverEvent);\n    panel.addEventListener('custom-select:focus-outside-panel', scrollToFocused);\n    select.addEventListener('change', changeEvent);\n    container.addEventListener('keydown', keydownEvent);\n  }\n\n  function removeEvents() {\n    document.removeEventListener('click', clickEvent);\n    panel.removeEventListener('mouseover', mouseoverEvent);\n    panel.removeEventListener('custom-select:focus-outside-panel', scrollToFocused);\n    select.removeEventListener('change', changeEvent);\n    container.removeEventListener('keydown', keydownEvent);\n  }\n\n  function disabled(bool) {\n    if (bool && !select.disabled) {\n      container.classList.add(builderParams.isDisabledClass);\n      select.disabled = true;\n      opener.removeAttribute('tabindex');\n      container.dispatchEvent(new CustomEvent('custom-select:disabled'));\n      removeEvents();\n    } else if (!bool && select.disabled) {\n      container.classList.remove(builderParams.isDisabledClass);\n      select.disabled = false;\n      opener.setAttribute('tabindex', '0');\n      container.dispatchEvent(new CustomEvent('custom-select:enabled'));\n      addEvents();\n    }\n  }\n\n  // Form a given select children DOM tree (options and optgroup),\n  // Creates the corresponding custom HTMLElements list (divs with different classes and attributes)\n  function parseMarkup(children) {\n    const nodeList = children;\n    const cstList = [];\n\n    if (typeof nodeList.length === 'undefined') {\n      throw new TypeError('Invalid Argument');\n    }\n\n    for (let i = 0, li = nodeList.length; i < li; i++) {\n      if (nodeList[i] instanceof HTMLElement && nodeList[i].tagName.toUpperCase() === 'OPTGROUP') {\n        const cstOptgroup = document.createElement('div');\n        cstOptgroup.classList.add(builderParams.optgroupClass);\n        cstOptgroup.setAttribute('data-label', nodeList[i].label);\n\n        // IMPORTANT: Stores in a property of the created custom option group\n        // a hook to the the corrisponding select's option group\n        cstOptgroup.customSelectOriginalOptgroup = nodeList[i];\n\n        // IMPORTANT: Stores in a property of select's option group\n        // a hook to the created custom option group\n        nodeList[i].customSelectCstOptgroup = cstOptgroup;\n\n        const subNodes = parseMarkup(nodeList[i].children);\n        for (let j = 0, lj = subNodes.length; j < lj; j++) {\n          cstOptgroup.appendChild(subNodes[j]);\n        }\n\n        cstList.push(cstOptgroup);\n      } else if (nodeList[i] instanceof HTMLElement\n          && nodeList[i].tagName.toUpperCase() === 'OPTION') {\n        const cstOption = document.createElement('div');\n        cstOption.classList.add(builderParams.optionClass);\n        cstOption.textContent = nodeList[i].text;\n        cstOption.setAttribute('data-value', nodeList[i].value);\n        cstOption.setAttribute('role', 'option');\n\n        // IMPORTANT: Stores in a property of the created custom option\n        // a hook to the the corrisponding select's option\n        cstOption.customSelectOriginalOption = nodeList[i];\n\n        // IMPORTANT: Stores in a property of select's option\n        // a hook to the created custom option\n        nodeList[i].customSelectCstOption = cstOption;\n\n        // If the select's option is selected\n        if (nodeList[i].selected) {\n          setSelectedElement(cstOption);\n        }\n        cstList.push(cstOption);\n      } else {\n        throw new TypeError('Invalid Argument');\n      }\n    }\n    return cstList;\n  }\n\n  function append(nodePar, appendIntoOriginal, targetPar) {\n    let target;\n    if (typeof targetPar === 'undefined'\n      || (targetPar === select)) {\n      target = panel;\n    } else if (targetPar instanceof HTMLElement\n      && targetPar.tagName.toUpperCase() === 'OPTGROUP'\n      && select.contains(targetPar)) {\n      target = targetPar.customSelectCstOptgroup;\n    } else {\n      throw new TypeError('Invalid Argument');\n    }\n\n    // If the node provided is a single HTMLElement it is stored in an array\n    const node = nodePar instanceof HTMLElement ? [nodePar] : nodePar;\n\n    // Injects the options|optgroup in the select\n    if (appendIntoOriginal) {\n      for (let i = 0, l = node.length; i < l; i++) {\n        if (target === panel) {\n          select.appendChild(node[i]);\n        } else {\n          target.customSelectOriginalOptgroup.appendChild(node[i]);\n        }\n      }\n    }\n\n    // The custom markup to append\n    const markupToInsert = parseMarkup(node);\n\n    // Injects the created DOM content in the panel\n    for (let i = 0, l = markupToInsert.length; i < l; i++) {\n      target.appendChild(markupToInsert[i]);\n    }\n\n    return node;\n  }\n\n  function insertBefore(node, targetPar) {\n    let target;\n    if (targetPar instanceof HTMLElement\n      && targetPar.tagName.toUpperCase() === 'OPTION'\n      && select.contains(targetPar)) {\n      target = targetPar.customSelectCstOption;\n    } else if (targetPar instanceof HTMLElement\n      && targetPar.tagName.toUpperCase() === 'OPTGROUP'\n      && select.contains(targetPar)) {\n      target = targetPar.customSelectCstOptgroup;\n    } else {\n      throw new TypeError('Invalid Argument');\n    }\n\n    // The custom markup to append\n    const markupToInsert = parseMarkup(node.length ? node : [node]);\n\n    target.parentNode.insertBefore(markupToInsert[0], target);\n\n    // Injects the option or optgroup node in the original select and returns the injected node\n    return targetPar.parentNode.insertBefore(node.length ? node[0] : node, targetPar);\n  }\n\n  function remove(node) {\n    let cstNode;\n    if (node instanceof HTMLElement\n      && node.tagName.toUpperCase() === 'OPTION'\n      && select.contains(node)) {\n      cstNode = node.customSelectCstOption;\n    } else if (node instanceof HTMLElement\n      && node.tagName.toUpperCase() === 'OPTGROUP'\n      && select.contains(node)) {\n      cstNode = node.customSelectCstOptgroup;\n    } else {\n      throw new TypeError('Invalid Argument');\n    }\n    cstNode.parentNode.removeChild(cstNode);\n    const removedNode = node.parentNode.removeChild(node);\n    changeEvent();\n    return removedNode;\n  }\n\n  function empty() {\n    const removed = [];\n    while (select.children.length) {\n      panel.removeChild(panel.children[0]);\n      removed.push(select.removeChild(select.children[0]));\n    }\n    setSelectedElement();\n    return removed;\n  }\n\n  function destroy() {\n    for (let i = 0, l = select.options.length; i < l; i++) {\n      delete select.options[i].customSelectCstOption;\n    }\n    const optGroup = select.getElementsByTagName('optgroup');\n    for (let i = 0, l = optGroup.length; i < l; i++) {\n      delete optGroup.customSelectCstOptgroup;\n    }\n\n    removeEvents();\n\n    return container.parentNode.replaceChild(select, container);\n  }\n  //\n  // Custom Select DOM tree creation\n  //\n\n  // Creates the container/wrapper\n  container = document.createElement('div');\n  container.classList.add(builderParams.containerClass, containerClass);\n\n  // Creates the opener\n  opener = document.createElement('span');\n  opener.className = builderParams.openerClass;\n  opener.setAttribute('role', 'combobox');\n  opener.setAttribute('aria-autocomplete', 'list');\n  opener.setAttribute('aria-expanded', 'false');\n  opener.innerHTML = `<span>\n   ${(select.selectedIndex !== -1 ? select.options[select.selectedIndex].text : '')}\n   </span>`;\n\n  // Creates the panel\n  // and injects the markup of the select inside\n  // with some tag and attributes replacement\n  panel = document.createElement('div');\n  // Create random id\n  const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  for (let i = 0; i < 5; i++) {\n    uId += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n  panel.id = `${containerClass}-${uId}-panel`;\n  panel.className = builderParams.panelClass;\n  panel.setAttribute('role', 'listbox');\n  opener.setAttribute('aria-owns', panel.id);\n\n  append(select.children, false);\n\n  // Injects the container in the original DOM position of the select\n  container.appendChild(opener);\n  select.parentNode.replaceChild(container, select);\n  container.appendChild(select);\n  container.appendChild(panel);\n\n  // ARIA labelledby - label\n  if (document.querySelector(`label[for=\"${select.id}\"]`)) {\n    currLabel = document.querySelector(`label[for=\"${select.id}\"]`);\n  } else if (container.parentNode.tagName.toUpperCase() === 'LABEL') {\n    currLabel = container.parentNode;\n  }\n  if (typeof currLabel !== 'undefined') {\n    currLabel.setAttribute('id', `${containerClass}-${uId}-label`);\n    opener.setAttribute('aria-labelledby', `${containerClass}-${uId}-label`);\n  }\n\n  // Event Init\n  if (select.disabled) {\n    container.classList.add(builderParams.isDisabledClass);\n  } else {\n    opener.setAttribute('tabindex', '0');\n    select.setAttribute('tabindex', '-1');\n    addEvents();\n  }\n\n  // Stores the plugin public exposed methods and properties, directly in the container HTMLElement\n  container.customSelect = {\n    get pluginOptions() { return builderParams; },\n    get open() { return isOpen; },\n    set open(bool) {\n      open(bool);\n    },\n    get disabled() { return select.disabled; },\n    set disabled(bool) {\n      disabled(bool);\n    },\n    get value() { return select.value; },\n    set value(val) {\n      setValue(val);\n    },\n    append: (node, target) => append(node, true, target),\n    insertBefore: (node, target) => insertBefore(node, target),\n    remove,\n    empty,\n    destroy,\n    opener,\n    select,\n    panel,\n    container,\n  };\n\n  // Stores the plugin directly in the original select\n  select.customSelect = container.customSelect;\n\n  // Returns the plugin instance, with the public exposed methods and properties\n  return container.customSelect;\n}\n\nexport default function customSelect(element, customParams) {\n  // Overrides the default options with the ones provided by the user\n  const nodeList = [];\n  const selects = [];\n\n  return (function init() {\n    // The plugin is called on a single HTMLElement\n    if (element && element instanceof HTMLElement && element.tagName.toUpperCase() === 'SELECT') {\n      nodeList.push(element);\n    // The plugin is called on a selector\n    } else if (element && typeof element === 'string') {\n      const elementsList = document.querySelectorAll(element);\n      for (let i = 0, l = elementsList.length; i < l; ++i) {\n        if (elementsList[i] instanceof HTMLElement\n          && elementsList[i].tagName.toUpperCase() === 'SELECT') {\n          nodeList.push(elementsList[i]);\n        }\n      }\n    // The plugin is called on any HTMLElements list (NodeList, HTMLCollection, Array, etc.)\n    } else if (element && element.length) {\n      for (let i = 0, l = element.length; i < l; ++i) {\n        if (element[i] instanceof HTMLElement\n          && element[i].tagName.toUpperCase() === 'SELECT') {\n          nodeList.push(element[i]);\n        }\n      }\n    }\n\n    // Launches the plugin over every HTMLElement\n    // And stores every plugin instance\n    for (let i = 0, l = nodeList.length; i < l; ++i) {\n      selects.push(builder(nodeList[i], Object.assign({}, defaultParams, customParams)));\n    }\n\n    // Returns all plugin instances\n    return selects;\n  }());\n}\n","export default function menu(){\n    const burger = document.querySelector('.navigation__burger');\n    const toggleMenu = () => {\n        burger.classList.toggle('navigation__burger_open');\n        document.querySelector('html').classList.toggle('no--scroll')\n    }\n\n    const closeMenu = () => {\n        burger.classList.remove('navigation__burger_open');\n        document.querySelector('html').classList.remove('no--scroll')\n    }\n\n    burger.addEventListener('click', toggleMenu);\n    window.addEventListener('resize', closeMenu);\n    document.addEventListener('click', (event) => {\n        const target = event.target;\n        if (target.classList.contains('navigation__link')) closeMenu();\n    })\n}","import range from \"./scripts/range\";\nimport customSelect from \"custom-select/src\";\nimport menu from \"./scripts/menu\";\n\nmenu();\ndocument.querySelector('input[type=range]') && range();\ndocument.querySelectorAll('.form__select') && customSelect('.form__select', {\n    containerClass: 'custom-select',\n    openerClass: 'custom-select__opener',\n    panelClass: 'custom-select__dropdown',\n    optionClass: 'custom-select__option',\n    isSelectedClass: 'custom-select__option_selected',\n    hasFocusClass: 'custom-select__option_focus',\n    isDisabledClass: 'custom-select__option_disabled',\n    isOpenClass: 'custom-select_open'\n});","export default function range() {\n\tconst $range = document.querySelector('input[type=range]');\n\tconst $rangeValue = document.querySelector('.range__value');\n\tconst changeRange = () => $rangeValue.innerText = `${$range.value}%`;\n\n\tchangeRange();\n\t$range.addEventListener('input', () => changeRange());\n}"],"names":["$2290e3bec83050ac$var$ce","window","CustomEvent","preventDefault","defaultPrevented","Error","e","$2290e3bec83050ac$var$CustomEvent","event","params","evt","origPrevent","bubbles","cancelable","detail","undefined","document","createEvent","initCustomEvent","call","this","Object","defineProperty","get","prototype","Event","$fdd04534b14a8d28$var$defaultParams","containerClass","openerClass","panelClass","optionClass","optgroupClass","isSelectedClass","hasFocusClass","isDisabledClass","isOpenClass","$fdd04534b14a8d28$var$builder","el","builderParams","isOpen","uId","select","container","opener","focusedElement","selectedElement","panel","currLabel","resetSearchTimeout","searchKey","setFocusedElement","cstOption","classList","remove","add","offsetTop","offsetParent","scrollTop","clientHeight","dispatchEvent","setSelectedElement","removeAttribute","setAttribute","children","textContent","customSelectOriginalOption","text","moveFocuesedElement","direction","currentFocusedIndex","indexOf","options","customSelectCstOption","open","bool","openedCustomSelect","querySelector","customSelect","clickEvent","target","contains","selected","activeElement","focus","mouseoverEvent","keydownEvent","keyCode","clearTimeout","setTimeout","String","fromCharCode","i","l","length","toUpperCase","substr","changeEvent","index","selectedIndex","scrollToFocused","currPanel","currentTarget","currOption","addEvents","addEventListener","removeEvents","removeEventListener","parseMarkup","nodeList","cstList","TypeError","li","HTMLElement","tagName","cstOptgroup","createElement","label","customSelectOriginalOptgroup","customSelectCstOptgroup","subNodes","j","lj","appendChild","push","value","append","nodePar","appendIntoOriginal","targetPar","node","markupToInsert","className","innerHTML","possible","i1","charAt","Math","floor","random","id","parentNode","replaceChild","disabled","pluginOptions","val","toSelect","setValue","insertBefore","cstNode","removeChild","removedNode","removed","optGroup","getElementsByTagName","i2","l1","burger","closeMenu","toggle","$02499617cd12a69e$export$2e2bcd8739ae039","$range","$rangeValue","changeRange","innerText","$6513ed8cb34392ae$export$2e2bcd8739ae039","querySelectorAll","element","customParams","selects","elementsList","assign","$fdd04534b14a8d28$export$2e2bcd8739ae039"],"version":3,"file":"index.23ca3df8.js.map"}